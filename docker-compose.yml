version: '3.7'
services:
  eureka-server:
    container_name: eureka-server
    build:
      context: /eureka-server
      dockerfile: Dockerfile
    command: mvn clean install -Dskiptestdocker-compose up
    ports:
      - "8761:8761"
  configserver:
    container_name: configserver
    build:
      context: /configserver
      dockerfile: Dockerfile
    command: mvn clean install -Dskiptest
    volumes:
      - ./config-data:/var/config-data
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - JAVA_OPTS=
        -Dspring.cloud.config.server.native.searchLocations=/var/config-data
        -DEUREKA_SERVER=http://eureka-server:8761/eureka
    depends_on:
      - eureka-server
    ports:
      - "8888:8888"
  gateway:
    container_name: gateway
    build:
      context: /gateway
      dockerfile: Dockerfile
    command: mvn clean install -Dskiptest
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - JAVA_OPTS=
        -DEUREKA_SERVER=http://eureka-server:8761/eureka
    depends_on:
      - eureka-server
      - main
    ports:
      - "8765:8765"
  oracle-db:
    image: oracle/database:19.3.0-ee
    hostname: oracle
    environment:
      - ORACLE_SID=ORCLCDB
      - ORACLE_PDB=ORCLPDB1
      - ORACLE_PWD=password
      - ORACLE_ALLOW_REMOTE=true

    ports:
      - 1521:1521
      - 5500:5500
    volumes:
      - oracle-data:/opt/oracle/oradata
      - oracle-backup:/opt/oracle/backup
    healthcheck:
      test: ["CMD", "sqlplus", "-L", "sys/Oracle_123@//localhost:1521/ORCLCDB as sysdba", "@healthcheck.sql"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - eureka-server
  post-service:
    build:
      context: /post-service
      dockerfile: Dockerfile
    command: mvn clean install -Dskiptest
    environment:
      - spring.datasource.url=jdbc:oracle:thin:@//oracle-db:1521/ORCLCDB
      - spring.datasource.username=memories
      - spring.datasource.password=memories
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - JAVA_OPTS=
        -DEUREKA_SERVER=http://eureka-server:8761/eureka
    restart: on-failure
    depends_on:
      - eureka-server
      - configserver
      - oracle-db
    deploy:
      mode: replicated
      replicas: 2
#  friend-service:
#    build:
#      context: /friend-service
#      dockerfile: Dockerfile
#    environment:
#      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
#      - JAVA_OPTS=
#        -DEUREKA_SERVER=http://eureka-server:8761/eureka
#    restart: on-failure
#    depends_on:
#      - eureka-server
#      - configserver
#      - oracle-db
#    deploy:
#      mode: replicated
#      replicas: 2
#  search-service:
#    build:
#      context: /search-service
#      dockerfile: Dockerfile
#    environment:
#      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
#      - JAVA_OPTS=
#        -DEUREKA_SERVER=http://eureka-server:8761/eureka
#    restart: on-failure
#    depends_on:
#      - eureka-server
#      - configserver
#      - oracle-db
#    deploy:
#      mode: replicated
#      replicas: 2
  main:
    container_name: main
    build:
      context: /main
      dockerfile: Dockerfile
    command: mvn clean install -Dskiptest
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
      - spring.datasource.url=jdbc:oracle:thin:@//oracle-db:1521/ORCLCDB
      - spring.datasource.username=memories
      - spring.datasource.password=memories
      - JAVA_OPTS=
        -DEUREKA_SERVER=http://eureka-server:8761/eureka
    restart: on-failure
    depends_on:
      - eureka-server
    deploy:
      mode: replicated
      replicas: 1
volumes:
  oracle-data:
  oracle-backup:
